#include <wx/gdicmn.h>
#include <wx/richtooltip.h>
#include "GlobalFunctions.h"
#include "MainFrameProxy.h"
#include "CncControl.h"
#include "CncPodiumManagement.h"

///////////////////////////////////////////////////////////////////
CncPodiumManagement::CncPodiumManagement(wxWindow* parent)
: CncPodiumManagementBase					(parent)
, CncPodiumMgmtMovement::CallbackInterface	()
, enabled									(true)
, movement									(NULL)
///////////////////////////////////////////////////////////////////
{
	movement = new CncPodiumMgmtMovement(this); 
	GblFunc::replaceControl(m_panelMovementPlaceholder, movement);
	movement->setCallbackInterface(this);
}
///////////////////////////////////////////////////////////////////
CncPodiumManagement::~CncPodiumManagement() {
///////////////////////////////////////////////////////////////////
	wxDELETE(movement);
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::dispatchAll() {
///////////////////////////////////////////////////////////////////
	//CNC_PRINT_LOCATION
	
	wxTheApp->SafeYield(this, true);
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::podiumNotifyEnable(bool state) {
///////////////////////////////////////////////////////////////////
	enabled = state;
	m_btClose->Enable(enabled);
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::podiumNotifyInit(bool state) {
///////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::podiumNotifyClose(bool state) {
///////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::showInfo() {
///////////////////////////////////////////////////////////////////
	wxRichToolTip tip(	"Additional information", 
						"While this dialogue is shown, the corresponding hardware buttons are active."
	);
	
	tip.SetIcon(wxICON_INFORMATION);
	tip.SetTipKind(wxTipKind_TopLeft);
	tip.ShowFor(m_info);
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::onShow(wxShowEvent& event) {
///////////////////////////////////////////////////////////////////
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::onInit(wxInitDialogEvent& event) {
///////////////////////////////////////////////////////////////////
	if ( movement->init() == false ) {
		Show(false);
		return;
	}
	
	showInfo();
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::onClose(wxCommandEvent& event) {
///////////////////////////////////////////////////////////////////
	if ( enabled == false )
		return;
	
	movement->close();
	Show(false);
}
///////////////////////////////////////////////////////////////////
void CncPodiumManagement::onLefDownInfo(wxMouseEvent& event) {
///////////////////////////////////////////////////////////////////
	showInfo();
}
