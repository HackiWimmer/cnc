//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterArduinoEnv.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTERARDUINOENV_BASE_CLASSES_H
#define _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTERARDUINOENV_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/panel.h>
#include <wx/button.h>
#include <wx/statline.h>
#include <wx/textctrl.h>
#include <wx/splitter.h>
#include <wx/stattext.h>
#include <wx/bmpbuttn.h>
#include <wx/tglbtn.h>
#include <wx/statbmp.h>
#include <wx/slider.h>
#include <wx/listbook.h>
#include <wx/imaglist.h>
#include <wx/propgrid/manager.h>
#include <wx/propgrid/property.h>
#include <wx/propgrid/advprops.h>
#include <wx/timer.h>
#include <wx/bitmap.h>
#include <map>
#include <wx/icon.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class CncArduinoEnvironmentBase : public wxFrame
{
protected:
    wxPanel* m_panelToolbar;
    wxButton* m_btForceUpdate;
    wxButton* m_btClearTrace;
    wxStaticLine* m_staticLine247;
    wxButton* m_btSmallSize;
    wxButton* m_btExpandedSize;
    wxTextCtrl* m_boardType;
    wxSplitterWindow* m_splitter250;
    wxPanel* m_splitterPage254;
    wxStaticText* m_staticText83;
    wxStaticText* m_staticText85;
    wxStaticText* m_staticText87;
    wxStaticText* m_limitSwicthLabelX;
    wxStaticText* m_staticText172;
    wxBitmapButton* m_btMinX;
    wxBitmapButton* m_btMaxX;
    wxStaticText* m_limitSwicthLabelY;
    wxStaticText* m_staticText17218;
    wxBitmapButton* m_btMinY;
    wxBitmapButton* m_btMaxY;
    wxStaticText* m_limitSwicthLabelZ;
    wxStaticText* m_staticText17219;
    wxBitmapButton* m_btMinZ;
    wxBitmapButton* m_btMaxZ;
    wxStaticLine* m_staticLine403;
    wxStaticText* m_staticText91;
    wxBitmapButton* m_btSortPins;
    wxPanel* m_pinListPlaceholder;
    wxPanel* m_splitterPage258;
    wxSplitterWindow* m_splitterMainH;
    wxPanel* m_splitterPageTop;
    wxStaticText* m_emergencyLabel;
    wxBitmapToggleButton* m_btEmergency;
    wxStaticLine* m_staticLine371;
    wxStaticText* m_PowerLabel;
    wxBitmapToggleButton* m_btPowerSwitch;
    wxStaticLine* m_staticLine3713;
    wxStaticBitmap* m_arduinoBitmap;
    wxPanel* m_loggerPlaceholder;
    wxStaticLine* m_staticLine309;
    wxStaticText* m_staticText305;
    wxSlider* m_loggerUpdateInterval;
    wxStaticText* m_loggerUpdateIntervalValue;
    wxStaticText* m_staticText311;
    wxPanel* m_splitterPageBottom;
    wxListbook* m_contextBook;
    wxPanel* m_panelArduinosPeriphery;
    wxStaticText* m_staticText2155;
    wxTextCtrl* m_cfgSpeed;
    wxStaticText* m_staticText21552;
    wxTextCtrl* m_msdSpeed;
    wxStaticBitmap* m_staticBitmap335;
    wxStaticText* m_staticText3132;
    wxStaticText* m_staticText215;
    wxTextCtrl* m_posStepperX;
    wxStaticBitmap* m_bmpDirectionX;
    wxStaticText* m_staticText313;
    wxStaticText* m_staticText21512;
    wxTextCtrl* m_posStepperY;
    wxStaticBitmap* m_bmpDirectionY;
    wxStaticText* m_staticText3131;
    wxStaticText* m_staticText21554;
    wxTextCtrl* m_posStepperZ;
    wxStaticBitmap* m_bmpDirectionZ;
    wxStaticText* m_staticText31327;
    wxStaticText* m_staticText215544;
    wxTextCtrl* m_posStepperH;
    wxStaticBitmap* m_bmpDirectionH;
    wxStaticText* m_staticText313278;
    wxStaticText* m_staticText355;
    wxSlider* m_valuesUpdateInterval;
    wxStaticText* m_valuesUpdateIntervalValue;
    wxStaticText* m_staticText3551;
    wxStaticLine* m_staticLine3522;
    wxPanel* m_panelSupportSwitches;
    wxStaticText* m_staticText170;
    wxStaticText* m_staticText181;
    wxStaticText* m_staticText17222;
    wxStaticText* m_staticText14610;
    wxBitmapButton* m_btSSBit8;
    wxStaticText* m_staticText14812;
    wxBitmapButton* m_btSSBit7;
    wxStaticText* m_staticText15014;
    wxBitmapButton* m_btSSBit6;
    wxStaticText* m_staticText15216;
    wxBitmapButton* m_btSSBit5;
    wxStaticText* m_staticText183;
    wxStaticText* m_staticText17221;
    wxStaticText* m_staticText146;
    wxBitmapButton* m_btSSBit4;
    wxStaticText* m_staticText148;
    wxBitmapButton* m_btSSBit3;
    wxStaticText* m_staticText150;
    wxBitmapButton* m_btSSBit2;
    wxStaticText* m_staticText152;
    wxBitmapButton* m_btSSBit1;
    wxPanel* m_panelConfiguration;
    wxStaticText* m_staticText9117;
    wxPropertyGridManager* m_pgMgrConfig;
    wxPGProperty* m_pgCatTracing;
    wxPGProperty* m_pgPropTraceGetters;
    wxPGProperty* m_pgPropTraceSetters;
    wxPanel* m_panelStatusbar;
    wxStaticText* m_staticText127;
    wxTextCtrl* m_curLimitStates;
    wxStaticLine* m_staticLine186;
    wxStaticText* m_staticText129;
    wxTextCtrl* m_curSupportStates;
    wxStaticLine* m_staticLine188;
    wxPanel* m_panel190;
    wxStaticLine* m_staticLine1881;
    wxStaticText* m_staticText106;
    wxTextCtrl* m_lastUpdate;
    wxTimer* m_startupTimer;
    wxTimer* m_continuousTimer;

protected:
    virtual void onClose(wxCloseEvent& event)
    {
	event.Skip();
    }
    virtual void onShow(wxShowEvent& event)
    {
	event.Skip();
    }
    virtual void onForceUpdate(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onClearTrace(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onStretchToSmallSize(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onStretchToExpandedSize(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onSortPins(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onEmergencyButton(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onPowerButton(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onLoggerUpdateInterval(wxScrollEvent& event)
    {
	event.Skip();
    }
    virtual void onValuesUpdateInterval(wxScrollEvent& event)
    {
	event.Skip();
    }
    virtual void onConfigChanged(wxPropertyGridEvent& event)
    {
	event.Skip();
    }
    virtual void onConfigChanging(wxPropertyGridEvent& event)
    {
	event.Skip();
    }
    virtual void onStartupTimer(wxTimerEvent& event)
    {
	event.Skip();
    }
    virtual void onContinuousTimer(wxTimerEvent& event)
    {
	event.Skip();
    }

public:
    wxButton* GetBtForceUpdate()
    {
	return m_btForceUpdate;
    }
    wxButton* GetBtClearTrace()
    {
	return m_btClearTrace;
    }
    wxStaticLine* GetStaticLine247()
    {
	return m_staticLine247;
    }
    wxButton* GetBtSmallSize()
    {
	return m_btSmallSize;
    }
    wxButton* GetBtExpandedSize()
    {
	return m_btExpandedSize;
    }
    wxTextCtrl* GetBoardType()
    {
	return m_boardType;
    }
    wxPanel* GetPanelToolbar()
    {
	return m_panelToolbar;
    }
    wxStaticText* GetStaticText83()
    {
	return m_staticText83;
    }
    wxStaticText* GetStaticText85()
    {
	return m_staticText85;
    }
    wxStaticText* GetStaticText87()
    {
	return m_staticText87;
    }
    wxStaticText* GetLimitSwicthLabelX()
    {
	return m_limitSwicthLabelX;
    }
    wxStaticText* GetStaticText172()
    {
	return m_staticText172;
    }
    wxBitmapButton* GetBtMinX()
    {
	return m_btMinX;
    }
    wxBitmapButton* GetBtMaxX()
    {
	return m_btMaxX;
    }
    wxStaticText* GetLimitSwicthLabelY()
    {
	return m_limitSwicthLabelY;
    }
    wxStaticText* GetStaticText17218()
    {
	return m_staticText17218;
    }
    wxBitmapButton* GetBtMinY()
    {
	return m_btMinY;
    }
    wxBitmapButton* GetBtMaxY()
    {
	return m_btMaxY;
    }
    wxStaticText* GetLimitSwicthLabelZ()
    {
	return m_limitSwicthLabelZ;
    }
    wxStaticText* GetStaticText17219()
    {
	return m_staticText17219;
    }
    wxBitmapButton* GetBtMinZ()
    {
	return m_btMinZ;
    }
    wxBitmapButton* GetBtMaxZ()
    {
	return m_btMaxZ;
    }
    wxStaticLine* GetStaticLine403()
    {
	return m_staticLine403;
    }
    wxStaticText* GetStaticText91()
    {
	return m_staticText91;
    }
    wxBitmapButton* GetBtSortPins()
    {
	return m_btSortPins;
    }
    wxPanel* GetPinListPlaceholder()
    {
	return m_pinListPlaceholder;
    }
    wxPanel* GetSplitterPage254()
    {
	return m_splitterPage254;
    }
    wxStaticText* GetEmergencyLabel()
    {
	return m_emergencyLabel;
    }
    wxBitmapToggleButton* GetBtEmergency()
    {
	return m_btEmergency;
    }
    wxStaticLine* GetStaticLine371()
    {
	return m_staticLine371;
    }
    wxStaticText* GetPowerLabel()
    {
	return m_PowerLabel;
    }
    wxBitmapToggleButton* GetBtPowerSwitch()
    {
	return m_btPowerSwitch;
    }
    wxStaticLine* GetStaticLine3713()
    {
	return m_staticLine3713;
    }
    wxStaticBitmap* GetArduinoBitmap()
    {
	return m_arduinoBitmap;
    }
    wxPanel* GetLoggerPlaceholder()
    {
	return m_loggerPlaceholder;
    }
    wxStaticLine* GetStaticLine309()
    {
	return m_staticLine309;
    }
    wxStaticText* GetStaticText305()
    {
	return m_staticText305;
    }
    wxSlider* GetLoggerUpdateInterval()
    {
	return m_loggerUpdateInterval;
    }
    wxStaticText* GetLoggerUpdateIntervalValue()
    {
	return m_loggerUpdateIntervalValue;
    }
    wxStaticText* GetStaticText311()
    {
	return m_staticText311;
    }
    wxPanel* GetSplitterPageTop()
    {
	return m_splitterPageTop;
    }
    wxStaticText* GetStaticText2155()
    {
	return m_staticText2155;
    }
    wxTextCtrl* GetCfgSpeed()
    {
	return m_cfgSpeed;
    }
    wxStaticText* GetStaticText21552()
    {
	return m_staticText21552;
    }
    wxTextCtrl* GetMsdSpeed()
    {
	return m_msdSpeed;
    }
    wxStaticBitmap* GetStaticBitmap335()
    {
	return m_staticBitmap335;
    }
    wxStaticText* GetStaticText3132()
    {
	return m_staticText3132;
    }
    wxStaticText* GetStaticText215()
    {
	return m_staticText215;
    }
    wxTextCtrl* GetPosStepperX()
    {
	return m_posStepperX;
    }
    wxStaticBitmap* GetBmpDirectionX()
    {
	return m_bmpDirectionX;
    }
    wxStaticText* GetStaticText313()
    {
	return m_staticText313;
    }
    wxStaticText* GetStaticText21512()
    {
	return m_staticText21512;
    }
    wxTextCtrl* GetPosStepperY()
    {
	return m_posStepperY;
    }
    wxStaticBitmap* GetBmpDirectionY()
    {
	return m_bmpDirectionY;
    }
    wxStaticText* GetStaticText3131()
    {
	return m_staticText3131;
    }
    wxStaticText* GetStaticText21554()
    {
	return m_staticText21554;
    }
    wxTextCtrl* GetPosStepperZ()
    {
	return m_posStepperZ;
    }
    wxStaticBitmap* GetBmpDirectionZ()
    {
	return m_bmpDirectionZ;
    }
    wxStaticText* GetStaticText31327()
    {
	return m_staticText31327;
    }
    wxStaticText* GetStaticText215544()
    {
	return m_staticText215544;
    }
    wxTextCtrl* GetPosStepperH()
    {
	return m_posStepperH;
    }
    wxStaticBitmap* GetBmpDirectionH()
    {
	return m_bmpDirectionH;
    }
    wxStaticText* GetStaticText313278()
    {
	return m_staticText313278;
    }
    wxStaticText* GetStaticText355()
    {
	return m_staticText355;
    }
    wxSlider* GetValuesUpdateInterval()
    {
	return m_valuesUpdateInterval;
    }
    wxStaticText* GetValuesUpdateIntervalValue()
    {
	return m_valuesUpdateIntervalValue;
    }
    wxStaticText* GetStaticText3551()
    {
	return m_staticText3551;
    }
    wxStaticLine* GetStaticLine3522()
    {
	return m_staticLine3522;
    }
    wxPanel* GetPanelArduinosPeriphery()
    {
	return m_panelArduinosPeriphery;
    }
    wxStaticText* GetStaticText170()
    {
	return m_staticText170;
    }
    wxStaticText* GetStaticText181()
    {
	return m_staticText181;
    }
    wxStaticText* GetStaticText17222()
    {
	return m_staticText17222;
    }
    wxStaticText* GetStaticText14610()
    {
	return m_staticText14610;
    }
    wxBitmapButton* GetBtSSBit8()
    {
	return m_btSSBit8;
    }
    wxStaticText* GetStaticText14812()
    {
	return m_staticText14812;
    }
    wxBitmapButton* GetBtSSBit7()
    {
	return m_btSSBit7;
    }
    wxStaticText* GetStaticText15014()
    {
	return m_staticText15014;
    }
    wxBitmapButton* GetBtSSBit6()
    {
	return m_btSSBit6;
    }
    wxStaticText* GetStaticText15216()
    {
	return m_staticText15216;
    }
    wxBitmapButton* GetBtSSBit5()
    {
	return m_btSSBit5;
    }
    wxStaticText* GetStaticText183()
    {
	return m_staticText183;
    }
    wxStaticText* GetStaticText17221()
    {
	return m_staticText17221;
    }
    wxStaticText* GetStaticText146()
    {
	return m_staticText146;
    }
    wxBitmapButton* GetBtSSBit4()
    {
	return m_btSSBit4;
    }
    wxStaticText* GetStaticText148()
    {
	return m_staticText148;
    }
    wxBitmapButton* GetBtSSBit3()
    {
	return m_btSSBit3;
    }
    wxStaticText* GetStaticText150()
    {
	return m_staticText150;
    }
    wxBitmapButton* GetBtSSBit2()
    {
	return m_btSSBit2;
    }
    wxStaticText* GetStaticText152()
    {
	return m_staticText152;
    }
    wxBitmapButton* GetBtSSBit1()
    {
	return m_btSSBit1;
    }
    wxPanel* GetPanelSupportSwitches()
    {
	return m_panelSupportSwitches;
    }
    wxStaticText* GetStaticText9117()
    {
	return m_staticText9117;
    }
    wxPropertyGridManager* GetPgMgrConfig()
    {
	return m_pgMgrConfig;
    }
    wxPanel* GetPanelConfiguration()
    {
	return m_panelConfiguration;
    }
    wxListbook* GetContextBook()
    {
	return m_contextBook;
    }
    wxPanel* GetSplitterPageBottom()
    {
	return m_splitterPageBottom;
    }
    wxSplitterWindow* GetSplitterMainH()
    {
	return m_splitterMainH;
    }
    wxPanel* GetSplitterPage258()
    {
	return m_splitterPage258;
    }
    wxSplitterWindow* GetSplitter250()
    {
	return m_splitter250;
    }
    wxStaticText* GetStaticText127()
    {
	return m_staticText127;
    }
    wxTextCtrl* GetCurLimitStates()
    {
	return m_curLimitStates;
    }
    wxStaticLine* GetStaticLine186()
    {
	return m_staticLine186;
    }
    wxStaticText* GetStaticText129()
    {
	return m_staticText129;
    }
    wxTextCtrl* GetCurSupportStates()
    {
	return m_curSupportStates;
    }
    wxStaticLine* GetStaticLine188()
    {
	return m_staticLine188;
    }
    wxPanel* GetPanel190()
    {
	return m_panel190;
    }
    wxStaticLine* GetStaticLine1881()
    {
	return m_staticLine1881;
    }
    wxStaticText* GetStaticText106()
    {
	return m_staticText106;
    }
    wxTextCtrl* GetLastUpdate()
    {
	return m_lastUpdate;
    }
    wxPanel* GetPanelStatusbar()
    {
	return m_panelStatusbar;
    }
    wxTimer* GetStartupTimer()
    {
	return m_startupTimer;
    }
    wxTimer* GetContinuousTimer()
    {
	return m_continuousTimer;
    }
    CncArduinoEnvironmentBase(wxWindow* parent,
        wxWindowID id = wxID_ANY,
        const wxString& title = _("CNC Arduino-/Periphery-Environment"),
        const wxPoint& pos = wxDefaultPosition,
        const wxSize& size = wxSize(-1, -1),
        long style = wxCAPTION | wxRESIZE_BORDER | wxMAXIMIZE_BOX | wxMINIMIZE_BOX | wxSYSTEM_MENU | wxCLOSE_BOX |
            wxSTAY_ON_TOP);
    virtual ~CncArduinoEnvironmentBase();
};

class ImageLibPins : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;

protected:
public:
    ImageLibPins();
    const wxBitmap& Bitmap(const wxString& name) const
    {
	if(!m_bitmaps.count(name + m_resolution))
	    return wxNullBitmap;
	return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString& res = wxEmptyString)
    {
	m_resolution = res;
    }

    virtual ~ImageLibPins();
};

class ImageLibStepper : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;

protected:
public:
    ImageLibStepper();
    const wxBitmap& Bitmap(const wxString& name) const
    {
	if(!m_bitmaps.count(name + m_resolution))
	    return wxNullBitmap;
	return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString& res = wxEmptyString)
    {
	m_resolution = res;
    }

    virtual ~ImageLibStepper();
};

class ImageLibArdoPower : public wxImageList
{
protected:
    // Maintain a map of all bitmaps representd by their name
    std::map<wxString, wxBitmap> m_bitmaps;
    // The requested image resolution (can be one of @2x, @1.5x, @1.25x or an empty string (the default)
    wxString m_resolution;
    int m_imagesWidth;
    int m_imagesHeight;

protected:
public:
    ImageLibArdoPower();
    const wxBitmap& Bitmap(const wxString& name) const
    {
	if(!m_bitmaps.count(name + m_resolution))
	    return wxNullBitmap;
	return m_bitmaps.find(name + m_resolution)->second;
    }

    void SetBitmapResolution(const wxString& res = wxEmptyString)
    {
	m_resolution = res;
    }

    virtual ~ImageLibArdoPower();
};

#endif
