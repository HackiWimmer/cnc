//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterPathGenerator.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#ifndef _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTERPATHGENERATOR_BASE_CLASSES_H
#define _CNCGUICONTROLLER_CNCCONTROLERGUI_WXCRAFTERPATHGENERATOR_BASE_CLASSES_H

// clang-format off
#include <wx/settings.h>
#include <wx/xrc/xmlres.h>
#include <wx/xrc/xh_bmp.h>
#include <wx/frame.h>
#include <wx/iconbndl.h>
#include <wx/artprov.h>
#include <wx/sizer.h>
#include <wx/splitter.h>
#include <wx/panel.h>
#include <wx/button.h>
#include <wx/textctrl.h>
#include <wx/treectrl.h>
#include <wx/combobox.h>
#include <wx/arrstr.h>
#include <wx/notebook.h>
#include <wx/imaglist.h>
#include <wx/webview.h>
#include <wx/stattext.h>
#include <wx/toolbook.h>
#include <wx/propgrid/manager.h>
#include <wx/propgrid/property.h>
#include <wx/propgrid/advprops.h>
#include <wx/checkbox.h>
#if wxVERSION_NUMBER >= 2900
#include <wx/persist.h>
#include <wx/persist/toplevel.h>
#include <wx/persist/bookctrl.h>
#include <wx/persist/treebook.h>
#endif

#ifdef WXC_FROM_DIP
#undef WXC_FROM_DIP
#endif
#if wxVERSION_NUMBER >= 3100
#define WXC_FROM_DIP(x) wxWindow::FromDIP(x, NULL)
#else
#define WXC_FROM_DIP(x) x
#endif

// clang-format on

class PathGeneratorFrameBase : public wxFrame
{
protected:
    wxSplitterWindow* m_mainSplitter;
    wxPanel* m_leftMainSplitterPage;
    wxButton* m_btPGMinimizeTree;
    wxTextCtrl* m_treeSearchText;
    wxButton* m_btSearchTree;
    wxTreeCtrl* m_templateTree;
    wxPanel* m_rightMainSplitterPage;
    wxSplitterWindow* m_splitter3185;
    wxPanel* m_splitterPage3189;
    wxComboBox* m_pgPathSelector;
    wxSplitterWindow* m_splitter2932;
    wxPanel* m_splitterPage2936;
    wxNotebook* m_pgMainBook;
    wxPanel* m_pgPreviewPage;
#if wxUSE_WEBVIEW
    wxWebView* m_pgPreview;
#endif // wxUSE_WEBVIEW

    wxPanel* m_pgAdditionalCodePage;
    wxTextCtrl* m_aditionalCode;
    wxPanel* m_pgAdditionalInfoPage;
    wxTextCtrl* m_additionalInfo;
    wxPanel* m_splitterPage2940;
    wxStaticText* m_staticText3401;
    wxTextCtrl* m_currentTemplate;
    wxStaticText* m_staticText33892;
    wxComboBox* m_cbEditMode;
    wxButton* m_updatePreview;
    wxStaticText* m_staticText3389;
    wxComboBox* m_cbDisplayMode;
    wxToolbook* m_tbOutput;
    wxPanel* m_panelPreview;
    wxTextCtrl* m_generatedPreview;
    wxPanel* m_panelResult;
    wxTextCtrl* m_generatedResult;
    wxPanel* m_panelInfo;
    wxTextCtrl* m_processInfo;
    wxPanel* m_splitterPage3193;
    wxButton* m_btPGGenerate;
    wxButton* m_btPGClear;
    wxButton* m_btPGReplaceEdit;
    wxButton* m_btPGCopy;
    wxButton* m_btPGSave;
    wxButton* m_btPGMinimize;
    wxButton* m_btPGClose;
    wxPropertyGridManager* m_pgParameterMgr;
    wxPGProperty* m_pgCatCommon;
    wxPGProperty* m_pgPropToolDiameter;
    wxPGProperty* m_pgPropCorrectionMode;
    wxPGProperty* m_pgPropCorrectionJointType;
    wxPGProperty* m_pgPropCLResolution;
    wxPGProperty* m_pgPropPathColour;
    wxPGProperty* m_pgPropConfigBlock;
    wxPGProperty* m_pgCatPath;
    wxPGProperty* m_pgProp01;
    wxPGProperty* m_pgCatGrid;
    wxPGProperty* m_pgPropRefCross;
    wxPGProperty* m_pgPropGridHelpConstructs;
    wxPGProperty* m_pgPropGridDisplay;
    wxPGProperty* m_pgPropGridSize;
    wxPGProperty* m_pgCatCncBlock;
    wxPGProperty* m_pgPropCncInclude;
    wxPGProperty* m_pgCatCncParameter;
    wxPGProperty* m_pgPropCncZDepthMode;
    wxPGProperty* m_pgPropCncZDepth;
    wxPGProperty* m_pgPropCncToolCorrection;
    wxPGProperty* m_pgPropCncReversePath;
    wxPGProperty* m_pgCatSvg;
    wxPGProperty* m_pgPropSvgWidth;
    wxPGProperty* m_pgPropSvgHeight;
    wxPGProperty* m_pgCatViewBox;
    wxPGProperty* m_pgPropSvgVbX;
    wxPGProperty* m_pgPropSvgVbY;
    wxPGProperty* m_pgPropSvgVbW;
    wxPGProperty* m_pgPropSvgVbH;
    wxPGProperty* m_pgCatTransform;
    wxPGProperty* m_pgPropTransformMode;
    wxPGProperty* m_pgCatTranslate;
    wxPGProperty* m_pgPropTranslateX;
    wxPGProperty* m_pgPropTranslateY;
    wxPGProperty* m_pgCatScale;
    wxPGProperty* m_pgPropScaleX;
    wxPGProperty* m_pgPropScaleY;
    wxPGProperty* m_pgCatRotate;
    wxPGProperty* m_pgPropRotateA;
    wxPGProperty* m_pgPropRotateX;
    wxPGProperty* m_pgPropRotateY;
    wxPGProperty* m_pgCatSkrew;
    wxPGProperty* m_pgPropSkewX;
    wxPGProperty* m_pgPropSkewY;
    wxCheckBox* m_autoGenerate;

protected:
    virtual void onCloseWindow(wxCloseEvent& event)
    {
	event.Skip();
    }
    virtual void onSize(wxSizeEvent& event)
    {
	event.Skip();
    }
    virtual void onActivate(wxActivateEvent& event)
    {
	event.Skip();
    }
    virtual void onMaximize(wxMaximizeEvent& event)
    {
	event.Skip();
    }
    virtual void onShow(wxShowEvent& event)
    {
	event.Skip();
    }
    virtual void mainShashPositionChanged(wxSplitterEvent& event)
    {
	event.Skip();
    }
    virtual void mainShashPositionChanging(wxSplitterEvent& event)
    {
	event.Skip();
    }
    virtual void toogleTreeSize(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void updateTreeSearch(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void keyDownTreeSearch(wxKeyEvent& event)
    {
	event.Skip();
    }
    virtual void treeSearch(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void selectTemplateTree(wxTreeEvent& event)
    {
	event.Skip();
    }
    virtual void selectPathSelector(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void pgMainBookChanged(wxNotebookEvent& event)
    {
	event.Skip();
    }
#if wxUSE_WEBVIEW
#endif // wxUSE_WEBVIEW
    virtual void selectEditMode(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void updatePreview(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void selectDisplayMode(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void generatePath(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void clearView(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void relaceEditControlSelection(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void copyPath(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void saveTemplate(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void toogleSize(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void onCloseWindowFromButton(wxCommandEvent& event)
    {
	event.Skip();
    }
    virtual void propertyChanged(wxPropertyGridEvent& event)
    {
	event.Skip();
    }
    virtual void propertyChanging(wxPropertyGridEvent& event)
    {
	event.Skip();
    }
    virtual void checkAutoGenerate(wxCommandEvent& event)
    {
	event.Skip();
    }

public:
    wxButton* GetBtPGMinimizeTree()
    {
	return m_btPGMinimizeTree;
    }
    wxTextCtrl* GetTreeSearchText()
    {
	return m_treeSearchText;
    }
    wxButton* GetBtSearchTree()
    {
	return m_btSearchTree;
    }
    wxTreeCtrl* GetTemplateTree()
    {
	return m_templateTree;
    }
    wxPanel* GetLeftMainSplitterPage()
    {
	return m_leftMainSplitterPage;
    }
    wxComboBox* GetPgPathSelector()
    {
	return m_pgPathSelector;
    }
    wxWebView* GetPgPreview()
    {
	return m_pgPreview;
    }
    wxPanel* GetPgPreviewPage()
    {
	return m_pgPreviewPage;
    }
    wxTextCtrl* GetAditionalCode()
    {
	return m_aditionalCode;
    }
    wxPanel* GetPgAdditionalCodePage()
    {
	return m_pgAdditionalCodePage;
    }
    wxTextCtrl* GetAdditionalInfo()
    {
	return m_additionalInfo;
    }
    wxPanel* GetPgAdditionalInfoPage()
    {
	return m_pgAdditionalInfoPage;
    }
    wxNotebook* GetPgMainBook()
    {
	return m_pgMainBook;
    }
    wxPanel* GetSplitterPage2936()
    {
	return m_splitterPage2936;
    }
    wxStaticText* GetStaticText3401()
    {
	return m_staticText3401;
    }
    wxTextCtrl* GetCurrentTemplate()
    {
	return m_currentTemplate;
    }
    wxStaticText* GetStaticText33892()
    {
	return m_staticText33892;
    }
    wxComboBox* GetCbEditMode()
    {
	return m_cbEditMode;
    }
    wxButton* GetUpdatePreview()
    {
	return m_updatePreview;
    }
    wxStaticText* GetStaticText3389()
    {
	return m_staticText3389;
    }
    wxComboBox* GetCbDisplayMode()
    {
	return m_cbDisplayMode;
    }
    wxTextCtrl* GetGeneratedPreview()
    {
	return m_generatedPreview;
    }
    wxPanel* GetPanelPreview()
    {
	return m_panelPreview;
    }
    wxTextCtrl* GetGeneratedResult()
    {
	return m_generatedResult;
    }
    wxPanel* GetPanelResult()
    {
	return m_panelResult;
    }
    wxTextCtrl* GetProcessInfo()
    {
	return m_processInfo;
    }
    wxPanel* GetPanelInfo()
    {
	return m_panelInfo;
    }
    wxToolbook* GetTbOutput()
    {
	return m_tbOutput;
    }
    wxPanel* GetSplitterPage2940()
    {
	return m_splitterPage2940;
    }
    wxSplitterWindow* GetSplitter2932()
    {
	return m_splitter2932;
    }
    wxPanel* GetSplitterPage3189()
    {
	return m_splitterPage3189;
    }
    wxButton* GetBtPGGenerate()
    {
	return m_btPGGenerate;
    }
    wxButton* GetBtPGClear()
    {
	return m_btPGClear;
    }
    wxButton* GetBtPGReplaceEdit()
    {
	return m_btPGReplaceEdit;
    }
    wxButton* GetBtPGCopy()
    {
	return m_btPGCopy;
    }
    wxButton* GetBtPGSave()
    {
	return m_btPGSave;
    }
    wxButton* GetBtPGMinimize()
    {
	return m_btPGMinimize;
    }
    wxButton* GetBtPGClose()
    {
	return m_btPGClose;
    }
    wxPropertyGridManager* GetPgParameterMgr()
    {
	return m_pgParameterMgr;
    }
    wxCheckBox* GetAutoGenerate()
    {
	return m_autoGenerate;
    }
    wxPanel* GetSplitterPage3193()
    {
	return m_splitterPage3193;
    }
    wxSplitterWindow* GetSplitter3185()
    {
	return m_splitter3185;
    }
    wxPanel* GetRightMainSplitterPage()
    {
	return m_rightMainSplitterPage;
    }
    wxSplitterWindow* GetMainSplitter()
    {
	return m_mainSplitter;
    }
    PathGeneratorFrameBase(wxWindow* parent,
        wxWindowID id = wxID_ANY,
        const wxString& title = _("SVG Path Generator"),
        const wxPoint& pos = wxDefaultPosition,
        const wxSize& size = wxSize(1600, 750),
        long style = wxDEFAULT_FRAME_STYLE | wxFRAME_FLOAT_ON_PARENT);
    virtual ~PathGeneratorFrameBase();
};

#endif
