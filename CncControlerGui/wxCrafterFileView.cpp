//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterFileView.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxCrafterFileView.h"

// Declare the bitmap loading function
extern void wxCD0FFInitBitmapResources();

static bool bBitmapLoaded = false;

CncFilePreviewWndBase::CncFilePreviewWndBase(wxWindow* parent,
    wxWindowID id,
    const wxString& title,
    const wxPoint& pos,
    const wxSize& size,
    long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if(!bBitmapLoaded) {
	// We need to initialise the default bitmap handler
	wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
	wxCD0FFInitBitmapResources();
	bBitmapLoaded = true;
    }
    // Set icon(s) to the application/dialog
    wxIconBundle app_icons;
    {
	wxBitmap iconBmp = wxXmlResource::Get()->LoadBitmap(wxT("chart-line-edit"));
	wxIcon icn;
	icn.CopyFromBitmap(iconBmp);
	app_icons.AddIcon(icn);
    }
    SetIcons(app_icons);

    wxFlexGridSizer* flexGridSizer3782 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer3782->SetFlexibleDirection(wxBOTH);
    flexGridSizer3782->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3782->AddGrowableCol(0);
    flexGridSizer3782->AddGrowableRow(1);
    this->SetSizer(flexGridSizer3782);

    wxFlexGridSizer* flexGridSizer3786 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer3786->SetFlexibleDirection(wxBOTH);
    flexGridSizer3786->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3786->AddGrowableCol(0);

    flexGridSizer3782->Add(flexGridSizer3786, 1, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    m_previewFileName = new wxTextCtrl(
        this, wxID_ANY, wxT("File name"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, 20)), wxTE_READONLY);
    m_previewFileName->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_3DLIGHT));
    m_previewFileName->SetForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNTEXT));
    wxFont m_previewFileNameFont(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_previewFileName->SetFont(m_previewFileNameFont);
#if wxVERSION_NUMBER >= 3000
    m_previewFileName->SetHint(wxT(""));
#endif

    flexGridSizer3786->Add(m_previewFileName, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));
    m_previewFileName->SetMinSize(wxSize(-1, 20));

    m_previewFileType = new wxTextCtrl(
        this, wxID_ANY, wxT("Type"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, 20)), wxTE_READONLY | wxTE_CENTRE);
    m_previewFileType->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));
    m_previewFileType->SetForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNTEXT));
    wxFont m_previewFileTypeFont(8, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_previewFileType->SetFont(m_previewFileTypeFont);
#if wxVERSION_NUMBER >= 3000
    m_previewFileType->SetHint(wxT(""));
#endif

    flexGridSizer3786->Add(m_previewFileType, 0, wxALL, WXC_FROM_DIP(0));
    m_previewFileType->SetMinSize(wxSize(-1, 20));

    m_previewPlaceHolder =
        new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    m_previewPlaceHolder->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT));
    m_previewPlaceHolder->SetToolTip(_("Only a placeholder"));

    flexGridSizer3782->Add(m_previewPlaceHolder, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    SetName(wxT("CncFilePreviewWndBase"));
    SetSize(wxDLG_UNIT(this, wxSize(500, 300)));
    if(GetSizer()) {
	GetSizer()->Fit(this);
    }
    if(GetParent()) {
	CentreOnParent(wxBOTH);
    } else {
	CentreOnScreen(wxBOTH);
    }
    if(!wxPersistenceManager::Get().Find(this)) {
	wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
	wxPersistenceManager::Get().Restore(this);
    }
    // Connect events
    this->Bind(wxEVT_CLOSE_WINDOW, &CncFilePreviewWndBase::onClose, this);
}

CncFilePreviewWndBase::~CncFilePreviewWndBase()
{
    this->Unbind(wxEVT_CLOSE_WINDOW, &CncFilePreviewWndBase::onClose, this);
}

CncFilePreviewBase::CncFilePreviewBase(wxWindow* parent,
    wxWindowID id,
    const wxPoint& pos,
    const wxSize& size,
    long style)
    : wxPanel(parent, id, pos, size, style)
{
    if(!bBitmapLoaded) {
	// We need to initialise the default bitmap handler
	wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
	wxCD0FFInitBitmapResources();
	bBitmapLoaded = true;
    }

    wxFlexGridSizer* flexGridSizer3760 = new wxFlexGridSizer(2, 1, 0, 0);
    flexGridSizer3760->SetFlexibleDirection(wxBOTH);
    flexGridSizer3760->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3760->AddGrowableCol(0);
    flexGridSizer3760->AddGrowableRow(1);
    this->SetSizer(flexGridSizer3760);

    m_panel52 = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    m_panel52->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    flexGridSizer3760->Add(m_panel52, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    wxFlexGridSizer* flexGridSizer53 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer53->SetFlexibleDirection(wxBOTH);
    flexGridSizer53->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    m_panel52->SetSizer(flexGridSizer53);

    wxFlexGridSizer* flexGridSizer48 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer48->SetFlexibleDirection(wxBOTH);
    flexGridSizer48->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);

    flexGridSizer53->Add(flexGridSizer48, 0, wxALL, WXC_FROM_DIP(5));

    m_previewTitle = new wxStaticText(m_panel52, wxID_ANY, _("Serial Outbound File Preview:"), wxDefaultPosition,
        wxDLG_UNIT(m_panel52, wxSize(-1, -1)), 0);
    wxFont m_previewTitleFont(12, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_previewTitle->SetFont(m_previewTitleFont);

    flexGridSizer48->Add(m_previewTitle, 0, wxALL, WXC_FROM_DIP(1));

    flexGridSizer48->Add(0, 26, 1, wxALL, WXC_FROM_DIP(1));

    m_previewBook = new wxSimplebook(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_previewBook->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNTEXT));
    m_previewBook->SetName(wxT("m_previewBook"));
    m_previewBook->SetEffect(wxSHOW_EFFECT_NONE);

    flexGridSizer3760->Add(m_previewBook, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    m_panel3764 = new wxPanel(
        m_previewBook, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_previewBook, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    m_previewBook->AddPage(m_panel3764, _("Page"), false);

    wxFlexGridSizer* flexGridSizer3768 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer3768->SetFlexibleDirection(wxBOTH);
    flexGridSizer3768->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3768->AddGrowableCol(0);
    flexGridSizer3768->AddGrowableRow(0);
    m_panel3764->SetSizer(flexGridSizer3768);

    m_svgPreviewPlaceholder =
        new wxPanel(m_panel3764, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panel3764, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    m_svgPreviewPlaceholder->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT));

    flexGridSizer3768->Add(m_svgPreviewPlaceholder, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    m_panel3766 = new wxPanel(
        m_previewBook, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_previewBook, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    m_previewBook->AddPage(m_panel3766, _("Page"), false);

    wxFlexGridSizer* flexGridSizer3772 = new wxFlexGridSizer(1, 2, 0, 0);
    flexGridSizer3772->SetFlexibleDirection(wxBOTH);
    flexGridSizer3772->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3772->AddGrowableCol(0);
    flexGridSizer3772->AddGrowableRow(0);
    m_panel3766->SetSizer(flexGridSizer3772);

    m_gcodePreviewPlaceholder =
        new wxPanel(m_panel3766, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(-1, -1)), wxTAB_TRAVERSAL);
    m_gcodePreviewPlaceholder->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNSHADOW));
    m_gcodePreviewPlaceholder->SetToolTip(_("Only a placeholder"));

    flexGridSizer3772->Add(m_gcodePreviewPlaceholder, 0, wxALL | wxEXPAND, WXC_FROM_DIP(1));

    wxFlexGridSizer* flexGridSizer2311 = new wxFlexGridSizer(30, 1, 0, 0);
    flexGridSizer2311->SetFlexibleDirection(wxBOTH);
    flexGridSizer2311->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);

    flexGridSizer3772->Add(flexGridSizer2311, 1, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    m_3D_Top =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Top->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewUp")), wxLEFT);
    m_3D_Top->SetBitmapMargins(2, 2);
#endif
    m_3D_Top->SetToolTip(_("Show from Top"));

    flexGridSizer2311->Add(m_3D_Top, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Top->SetMinSize(wxSize(26, 26));

    m_3D_Bottom =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Bottom->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewDown")), wxLEFT);
    m_3D_Bottom->SetBitmapMargins(2, 2);
#endif
    m_3D_Bottom->SetToolTip(_("Show from Bottom"));

    flexGridSizer2311->Add(m_3D_Bottom, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Bottom->SetMinSize(wxSize(26, 26));

    m_3D_Front =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Front->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewFront")), wxLEFT);
    m_3D_Front->SetBitmapMargins(2, 2);
#endif
    m_3D_Front->SetToolTip(_("Show from Front"));

    flexGridSizer2311->Add(m_3D_Front, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Front->SetMinSize(wxSize(26, 26));

    m_3D_Rear =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Rear->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewButtom")), wxLEFT);
    m_3D_Rear->SetBitmapMargins(2, 2);
#endif
    m_3D_Rear->SetToolTip(_("Show from Rear"));

    flexGridSizer2311->Add(m_3D_Rear, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Rear->SetMinSize(wxSize(26, 26));

    m_3D_Left =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Left->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewLeft")), wxLEFT);
    m_3D_Left->SetBitmapMargins(2, 2);
#endif
    m_3D_Left->SetToolTip(_("Show from Left"));

    flexGridSizer2311->Add(m_3D_Left, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Left->SetMinSize(wxSize(26, 26));

    m_3D_Right =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Right->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewRight")), wxLEFT);
    m_3D_Right->SetBitmapMargins(2, 2);
#endif
    m_3D_Right->SetToolTip(_("Show from Right"));

    flexGridSizer2311->Add(m_3D_Right, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Right->SetMinSize(wxSize(26, 26));

    m_staticLine3483 = new wxStaticLine(
        m_panel3766, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(-1, -1)), wxLI_HORIZONTAL);

    flexGridSizer2311->Add(m_staticLine3483, 0, wxALL | wxEXPAND, WXC_FROM_DIP(2));

    m_3D_Perspective1 = new wxButton(
        m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), wxBORDER_THEME);
#if wxVERSION_NUMBER >= 2904
    m_3D_Perspective1->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewIso1")), wxLEFT);
    m_3D_Perspective1->SetBitmapMargins(2, 2);
#endif
    m_3D_Perspective1->SetToolTip(_("Show 3D - ISO1"));

    flexGridSizer2311->Add(m_3D_Perspective1, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Perspective1->SetMinSize(wxSize(26, 26));

    m_3D_Perspective2 =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Perspective2->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewIso2")), wxLEFT);
    m_3D_Perspective2->SetBitmapMargins(2, 2);
#endif
    m_3D_Perspective2->SetToolTip(_("Show 3D - ISO2"));

    flexGridSizer2311->Add(m_3D_Perspective2, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Perspective2->SetMinSize(wxSize(26, 26));

    m_3D_Perspective3 =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Perspective3->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewIso3")), wxLEFT);
    m_3D_Perspective3->SetBitmapMargins(2, 2);
#endif
    m_3D_Perspective3->SetToolTip(_("Show 3D - ISO3"));

    flexGridSizer2311->Add(m_3D_Perspective3, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Perspective3->SetMinSize(wxSize(26, 26));

    m_3D_Perspective4 =
        new wxButton(m_panel3766, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(m_panel3766, wxSize(26, 26)), 0);
#if wxVERSION_NUMBER >= 2904
    m_3D_Perspective4->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("ViewIso4")), wxLEFT);
    m_3D_Perspective4->SetBitmapMargins(2, 2);
#endif
    m_3D_Perspective4->SetToolTip(_("Show 3D - ISO4"));

    flexGridSizer2311->Add(m_3D_Perspective4, 0, wxALL, WXC_FROM_DIP(0));
    m_3D_Perspective4->SetMinSize(wxSize(26, 26));

    SetName(wxT("CncFilePreviewBase"));
    SetSize(wxDLG_UNIT(this, wxSize(500, 300)));
    if(GetSizer()) {
	GetSizer()->Fit(this);
    }
    // Connect events
    m_previewBook->Bind(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, &CncFilePreviewBase::previewBookChanged, this);
    m_previewBook->Bind(wxEVT_PAINT, &CncFilePreviewBase::previewBookPaint, this);
    m_3D_Top->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromTop3D, this);
    m_3D_Bottom->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromBottom3D, this);
    m_3D_Front->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromFront3D, this);
    m_3D_Rear->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromRear3D, this);
    m_3D_Left->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromLeft3D, this);
    m_3D_Right->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromRight3D, this);
    m_3D_Perspective1->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
    m_3D_Perspective2->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
    m_3D_Perspective3->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
    m_3D_Perspective4->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
}

CncFilePreviewBase::~CncFilePreviewBase()
{
    m_previewBook->Unbind(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, &CncFilePreviewBase::previewBookChanged, this);
    m_previewBook->Unbind(wxEVT_PAINT, &CncFilePreviewBase::previewBookPaint, this);
    m_3D_Top->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromTop3D, this);
    m_3D_Bottom->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromBottom3D, this);
    m_3D_Front->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromFront3D, this);
    m_3D_Rear->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromRear3D, this);
    m_3D_Left->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromLeft3D, this);
    m_3D_Right->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::showFromRight3D, this);
    m_3D_Perspective1->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
    m_3D_Perspective2->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
    m_3D_Perspective3->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
    m_3D_Perspective4->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFilePreviewBase::show3D, this);
}

CncFileViewBase::CncFileViewBase(wxWindow* parent, wxWindowID id, const wxPoint& pos, const wxSize& size, long style)
    : wxPanel(parent, id, pos, size, style)
{
    if(!bBitmapLoaded) {
	// We need to initialise the default bitmap handler
	wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
	wxCD0FFInitBitmapResources();
	bBitmapLoaded = true;
    }

    wxFlexGridSizer* flexGridSizer3841 = new wxFlexGridSizer(3, 1, 0, 0);
    flexGridSizer3841->SetFlexibleDirection(wxBOTH);
    flexGridSizer3841->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3841->AddGrowableCol(0);
    flexGridSizer3841->AddGrowableRow(0);
    this->SetSizer(flexGridSizer3841);

    m_fileListPlaceholder =
        new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, 100)), wxTAB_TRAVERSAL);
    m_fileListPlaceholder->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT));

    flexGridSizer3841->Add(m_fileListPlaceholder, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));
    m_fileListPlaceholder->SetMinSize(wxSize(-1, 100));

    wxFlexGridSizer* flexGridSizer3847 = new wxFlexGridSizer(0, 7, 0, 0);
    flexGridSizer3847->SetFlexibleDirection(wxBOTH);
    flexGridSizer3847->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3847->AddGrowableCol(6);
    flexGridSizer3847->AddGrowableRow(0);

    flexGridSizer3841->Add(flexGridSizer3847, 1, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    m_btDirUp = new wxBitmapButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("go-up-search")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(24, 24)), wxBU_AUTODRAW);
    m_btDirUp->SetToolTip(_(".."));

    flexGridSizer3847->Add(m_btDirUp, 0, wxALL, WXC_FROM_DIP(0));
    m_btDirUp->SetMinSize(wxSize(24, 24));

    m_btRefresh = new wxBitmapButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("view-refresh-3")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(24, 24)), wxBU_AUTODRAW);
    m_btRefresh->SetToolTip(_("Refresh"));

    flexGridSizer3847->Add(m_btRefresh, 0, wxALL, WXC_FROM_DIP(0));
    m_btRefresh->SetMinSize(wxSize(24, 24));

    m_btDefaultPath = new wxBitmapButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("workspace")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(24, 24)), wxBU_AUTODRAW);
    m_btDefaultPath->SetToolTip(_("Select Default Path"));

    flexGridSizer3847->Add(m_btDefaultPath, 0, wxALL, WXC_FROM_DIP(0));
    m_btDefaultPath->SetMinSize(wxSize(24, 24));

    m_staticLine5035 =
        new wxStaticLine(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), wxLI_VERTICAL);

    flexGridSizer3847->Add(m_staticLine5035, 0, wxALL | wxEXPAND, WXC_FROM_DIP(1));

    m_btNewTemplate = new wxBitmapButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("document-new-3")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(24, 24)), wxBU_AUTODRAW);
    m_btNewTemplate->SetToolTip(_("New Template"));

    flexGridSizer3847->Add(m_btNewTemplate, 0, wxALL, WXC_FROM_DIP(0));
    m_btNewTemplate->SetMinSize(wxSize(24, 24));

    m_btOpenTemplate = new wxBitmapButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("document-open-5")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(24, 24)), wxBU_AUTODRAW);
    m_btOpenTemplate->SetToolTip(_("Open Template  Dialog"));

    flexGridSizer3847->Add(m_btOpenTemplate, 0, wxALL, WXC_FROM_DIP(0));
    m_btOpenTemplate->SetMinSize(wxSize(24, 24));

    wxArrayString m_filterExtentionArr;
    m_filterExtention = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)),
        m_filterExtentionArr, wxCB_READONLY | wxBORDER_NONE);
    wxFont m_filterExtentionFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_filterExtention->SetFont(m_filterExtentionFont);

    flexGridSizer3847->Add(m_filterExtention, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    wxFlexGridSizer* flexGridSizer3852 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer3852->SetFlexibleDirection(wxBOTH);
    flexGridSizer3852->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer3852->AddGrowableCol(0);
    flexGridSizer3852->AddGrowableRow(0);

    flexGridSizer3841->Add(flexGridSizer3852, 0, wxALL | wxEXPAND, WXC_FROM_DIP(1));

    m_currentDirectory = new wxTextCtrl(this, wxID_ANY, wxT("c:\\xxx"), wxDefaultPosition,
        wxDLG_UNIT(this, wxSize(-1, 19)), wxTE_RIGHT | wxTE_READONLY | wxBORDER_NONE);
    m_currentDirectory->SetBackgroundColour(wxColour(wxT("rgb(32,32,32)")));
    m_currentDirectory->SetForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));
#if wxVERSION_NUMBER >= 3000
    m_currentDirectory->SetHint(wxT(""));
#endif

    flexGridSizer3852->Add(m_currentDirectory, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));
    m_currentDirectory->SetMinSize(wxSize(-1, 19));

    SetName(wxT("CncFileViewBase"));
    SetSize(wxDLG_UNIT(this, wxSize(-1, -1)));
    if(GetSizer()) {
	GetSizer()->Fit(this);
    }
    // Connect events
    m_btDirUp->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::aFolderUp, this);
    m_btRefresh->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::refresh, this);
    m_btDefaultPath->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::selectDefault, this);
    m_btNewTemplate->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::selectNewTemplate, this);
    m_btOpenTemplate->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::selectOpenTemplate, this);
    m_filterExtention->Bind(wxEVT_COMMAND_COMBOBOX_SELECTED, &CncFileViewBase::selectFilter, this);
}

CncFileViewBase::~CncFileViewBase()
{
    m_btDirUp->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::aFolderUp, this);
    m_btRefresh->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::refresh, this);
    m_btDefaultPath->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::selectDefault, this);
    m_btNewTemplate->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::selectNewTemplate, this);
    m_btOpenTemplate->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncFileViewBase::selectOpenTemplate, this);
    m_filterExtention->Unbind(wxEVT_COMMAND_COMBOBOX_SELECTED, &CncFileViewBase::selectFilter, this);
}
