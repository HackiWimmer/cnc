//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: wxCrafterMessageDialog.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxCrafterMessageDialog.h"

// Declare the bitmap loading function
extern void wxC91D6InitBitmapResources();

static bool bBitmapLoaded = false;

CncMessageDialogBase::CncMessageDialogBase(wxWindow* parent,
    wxWindowID id,
    const wxString& title,
    const wxPoint& pos,
    const wxSize& size,
    long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if(!bBitmapLoaded) {
	// We need to initialise the default bitmap handler
	wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
	wxC91D6InitBitmapResources();
	bBitmapLoaded = true;
    }
    // Set icon(s) to the application/dialog
    wxIconBundle app_icons;
    {
	wxBitmap iconBmp = wxXmlResource::Get()->LoadBitmap(wxT("messagebox_info"));
	wxIcon icn;
	icn.CopyFromBitmap(iconBmp);
	app_icons.AddIcon(icn);
    }
    SetIcons(app_icons);

    wxFlexGridSizer* flexGridSizer7179 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer7179->SetFlexibleDirection(wxBOTH);
    flexGridSizer7179->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer7179->AddGrowableCol(0);
    flexGridSizer7179->AddGrowableRow(0);
    this->SetSizer(flexGridSizer7179);

    wxFlexGridSizer* flexGridSizer7184 = new wxFlexGridSizer(3, 1, 0, 0);
    flexGridSizer7184->SetFlexibleDirection(wxBOTH);
    flexGridSizer7184->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer7184->AddGrowableCol(0);
    flexGridSizer7184->AddGrowableRow(1);

    flexGridSizer7179->Add(flexGridSizer7184, 1, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    wxFlexGridSizer* flexGridSizer7190 = new wxFlexGridSizer(1, 3, 0, 0);
    flexGridSizer7190->SetFlexibleDirection(wxBOTH);
    flexGridSizer7190->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer7190->AddGrowableCol(1);
    flexGridSizer7190->AddGrowableRow(0);

    flexGridSizer7184->Add(flexGridSizer7190, 1, wxALL | wxEXPAND, WXC_FROM_DIP(2));

    wxFlexGridSizer* flexGridSizer7591 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer7591->SetFlexibleDirection(wxBOTH);
    flexGridSizer7591->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);

    flexGridSizer7190->Add(flexGridSizer7591, 0, wxALL, WXC_FROM_DIP(0));

    m_staticBitmap7188 = new wxStaticBitmap(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("16-gtk@2x")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);

    flexGridSizer7591->Add(m_staticBitmap7188, 0, wxALL, WXC_FROM_DIP(0));

    flexGridSizer7591->Add(5, 0, 1, wxALL, WXC_FROM_DIP(0));

    m_headline =
        new wxStaticText(this, wxID_ANY, _("Headline"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    wxFont m_headlineFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_headline->SetFont(m_headlineFont);

    flexGridSizer7190->Add(m_headline, 0, wxALL, WXC_FROM_DIP(2));

    m_btToggleWordWrap = new wxBitmapToggleButton(this, wxID_ANY, wxXmlResource::Get()->LoadBitmap(wxT("16-word_wrap")),
        wxDefaultPosition, wxDLG_UNIT(this, wxSize(26, 26)), 0);
    m_btToggleWordWrap->SetToolTip(_("Toggle Word Wrap"));
    m_btToggleWordWrap->SetValue(true);

    flexGridSizer7190->Add(m_btToggleWordWrap, 0, wxALL, WXC_FROM_DIP(0));
    m_btToggleWordWrap->SetMinSize(wxSize(26, 26));

    wxFlexGridSizer* flexGridSizer7181 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer7181->SetFlexibleDirection(wxBOTH);
    flexGridSizer7181->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer7181->AddGrowableCol(0);
    flexGridSizer7181->AddGrowableRow(0);

    flexGridSizer7184->Add(flexGridSizer7181, 1, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    wxFlexGridSizer* flexGridSizer7576 = new wxFlexGridSizer(1, 1, 0, 0);
    flexGridSizer7576->SetFlexibleDirection(wxBOTH);
    flexGridSizer7576->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);
    flexGridSizer7576->AddGrowableCol(0);
    flexGridSizer7576->AddGrowableRow(0);

    flexGridSizer7181->Add(flexGridSizer7576, 1, wxALL | wxEXPAND, WXC_FROM_DIP(1));

    m_message = new wxStyledTextCtrl(this, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    // Configure the fold margin
    m_message->SetMarginType(4, wxSTC_MARGIN_SYMBOL);
    m_message->SetMarginMask(4, wxSTC_MASK_FOLDERS);
    m_message->SetMarginSensitive(4, true);
    m_message->SetMarginWidth(4, 16);

    m_message->SetProperty(wxT("fold"), wxT("1"));
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDEROPEN, wxSTC_MARK_ARROWDOWN);
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDER, wxSTC_MARK_ARROW);
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDERSUB, wxSTC_MARK_BACKGROUND);
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDERTAIL, wxSTC_MARK_BACKGROUND);
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDEREND, wxSTC_MARK_ARROW);
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDEROPENMID, wxSTC_MARK_ARROWDOWN);
    m_message->MarkerDefine(wxSTC_MARKNUM_FOLDERMIDTAIL, wxSTC_MARK_BACKGROUND);
    // Configure the tracker margin
    m_message->SetMarginWidth(1, 0);

    // Configure the symbol margin
    m_message->SetMarginType(2, wxSTC_MARGIN_SYMBOL);
    m_message->SetMarginMask(2, ~(wxSTC_MASK_FOLDERS));
    m_message->SetMarginWidth(2, 0);
    m_message->SetMarginSensitive(2, true);

    // Configure the line numbers margin
    int m_message_PixelWidth = 4 + 5 * m_message->TextWidth(wxSTC_STYLE_LINENUMBER, wxT("9"));
    m_message->SetMarginType(0, wxSTC_MARGIN_NUMBER);
    m_message->SetMarginWidth(0, m_message_PixelWidth);

    // Configure the line symbol margin
    m_message->SetMarginType(3, wxSTC_MARGIN_FORE);
    m_message->SetMarginMask(3, 0);
    m_message->SetMarginWidth(3, 0);
    // Select the lexer
    m_message->SetLexer(wxSTC_LEX_NULL);
    // Set default font / styles
    m_message->StyleClearAll();
    m_message->SetWrapMode(0);
    m_message->SetIndentationGuides(0);
    m_message->SetKeyWords(0, wxT(""));
    m_message->SetKeyWords(1, wxT(""));
    m_message->SetKeyWords(2, wxT(""));
    m_message->SetKeyWords(3, wxT(""));
    m_message->SetKeyWords(4, wxT(""));

    flexGridSizer7576->Add(m_message, 0, wxALL | wxEXPAND, WXC_FROM_DIP(0));

    wxFlexGridSizer* flexGridSizer7192 = new wxFlexGridSizer(0, 2, 0, 0);
    flexGridSizer7192->SetFlexibleDirection(wxBOTH);
    flexGridSizer7192->SetNonFlexibleGrowMode(wxFLEX_GROWMODE_SPECIFIED);

    flexGridSizer7184->Add(flexGridSizer7192, 1, wxALL | wxEXPAND | wxALIGN_RIGHT, WXC_FROM_DIP(1));

    m_btClose = new wxButton(this, wxID_ANY, _("Close"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    m_btClose->SetDefault();
#if wxVERSION_NUMBER >= 2904
    m_btClose->SetBitmap(wxXmlResource::Get()->LoadBitmap(wxT("dialog-ok")), wxLEFT);
    m_btClose->SetBitmapMargins(2, 2);
#endif
    wxFont m_btCloseFont(9, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, wxT("Segoe UI"));
    m_btClose->SetFont(m_btCloseFont);
    m_btClose->SetToolTip(_("Close the dialog"));

    flexGridSizer7192->Add(m_btClose, 0, wxALL, WXC_FROM_DIP(0));

    SetName(wxT("CncMessageDialogBase"));
    SetMinClientSize(wxSize(500, 300));
    SetSize(wxDLG_UNIT(this, wxSize(500, 300)));
    if(GetSizer()) {
	GetSizer()->Fit(this);
    }
    if(GetParent()) {
	CentreOnParent(wxBOTH);
    } else {
	CentreOnScreen(wxBOTH);
    }
    // Connect events
    this->Bind(wxEVT_INIT_DIALOG, &CncMessageDialogBase::onInitDialog, this);
    m_btToggleWordWrap->Bind(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, &CncMessageDialogBase::onWordWrap, this);
    m_btClose->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &CncMessageDialogBase::close, this);
}

CncMessageDialogBase::~CncMessageDialogBase()
{
    this->Unbind(wxEVT_INIT_DIALOG, &CncMessageDialogBase::onInitDialog, this);
    m_btToggleWordWrap->Unbind(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, &CncMessageDialogBase::onWordWrap, this);
    m_btClose->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &CncMessageDialogBase::close, this);
}
